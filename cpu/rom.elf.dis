
rom.elf:     file format elf32-littlemoxie


Disassembly of section .text:

00001000 <_start>:
    1000:	00 0f       	nop
    1002:	00 0f       	nop
    1004:	00 0f       	nop

00001006 <nop_test_pass>:
    1006:	20 01 01 00 	ldi.l	$r0, 0x1
    100a:	00 00 
    100c:	30 01 02 00 	ldi.l	$r1, 0x2
    1010:	00 00 

00001012 <beq_1_test>:
    1012:	22 0e       	cmp	$r0, $r0
    1014:	01 c0       	beq	1018 <beq_1_pass>
	...

00001018 <beq_1_pass>:
    1018:	23 0e       	cmp	$r0, $r1
    101a:	03 c0       	beq	1022 <beq_2_fail>
    101c:	00 1a 24 10 	jmpa	1024 <beq_2_pass>
    1020:	00 00 

00001022 <beq_2_fail>:
	...

00001024 <beq_2_pass>:
    1024:	23 0e       	cmp	$r0, $r1
    1026:	01 c4       	bne	102a <bne_1_pass>
	...

0000102a <bne_1_pass>:
    102a:	22 0e       	cmp	$r0, $r0
    102c:	03 c4       	bne	1034 <bne_2_fail>
    102e:	00 1a 36 10 	jmpa	1036 <bne_2_pass>
    1032:	00 00 

00001034 <bne_2_fail>:
	...

00001036 <bne_2_pass>:
    1036:	20 01 00 01 	ldi.l	$r0, 0xa0000100
    103a:	00 a0 
    103c:	30 01 00 02 	ldi.l	$r1, 0xa0000200
    1040:	00 a0 

00001042 <bgtu_1_test>:
    1042:	32 0e       	cmp	$r1, $r0
    1044:	01 d4       	bgtu	1048 <bgtu_1_pass>
	...

00001048 <bgtu_1_pass>:
    1048:	23 0e       	cmp	$r0, $r1
    104a:	03 d4       	bgtu	1052 <bgtu_2_fail>
    104c:	00 1a 54 10 	jmpa	1054 <bgtu_2_pass>
    1050:	00 00 

00001052 <bgtu_2_fail>:
	...

00001054 <bgtu_2_pass>:
    1054:	22 0e       	cmp	$r0, $r0
    1056:	03 d4       	bgtu	105e <bgtu_3_fail>
    1058:	00 1a 60 10 	jmpa	1060 <bgtu_3_pass>
    105c:	00 00 

0000105e <bgtu_3_fail>:
	...

00001060 <bgtu_3_pass>:
    1060:	23 0e       	cmp	$r0, $r1
    1062:	01 d0       	bltu	1066 <bltu_1_pass>
	...

00001066 <bltu_1_pass>:
    1066:	32 0e       	cmp	$r1, $r0
    1068:	03 d0       	bltu	1070 <bltu_2_fail>
    106a:	00 1a 72 10 	jmpa	1072 <bltu_2_pass>
    106e:	00 00 

00001070 <bltu_2_fail>:
	...

00001072 <bltu_2_pass>:
    1072:	22 0e       	cmp	$r0, $r0
    1074:	03 d0       	bltu	107c <bltu_3_fail>
    1076:	00 1a 7e 10 	jmpa	107e <bgeu_1_test>
    107a:	00 00 

0000107c <bltu_3_fail>:
	...

0000107e <bgeu_1_test>:
    107e:	32 0e       	cmp	$r1, $r0
    1080:	01 e0       	bgeu	1084 <bgeu_1_pass>
	...

00001084 <bgeu_1_pass>:
    1084:	23 0e       	cmp	$r0, $r1
    1086:	03 e0       	bgeu	108e <bgeu_2_fail>
    1088:	00 1a 90 10 	jmpa	1090 <bgeu_2_pass>
    108c:	00 00 

0000108e <bgeu_2_fail>:
	...

00001090 <bgeu_2_pass>:
    1090:	22 0e       	cmp	$r0, $r0
    1092:	01 e0       	bgeu	1096 <bgeu_3_pass>
	...

00001096 <bgeu_3_pass>:
    1096:	23 0e       	cmp	$r0, $r1
    1098:	01 e4       	bleu	109c <bleu_1_pass>
	...

0000109c <bleu_1_pass>:
    109c:	32 0e       	cmp	$r1, $r0
    109e:	03 e4       	bleu	10a6 <bleu_2_fail>
    10a0:	00 1a a8 10 	jmpa	10a8 <bleu_2_pass>
    10a4:	00 00 

000010a6 <bleu_2_fail>:
	...

000010a8 <bleu_2_pass>:
    10a8:	22 0e       	cmp	$r0, $r0
    10aa:	01 e4       	bleu	10ae <bleu_3_pass>
	...

000010ae <bleu_3_pass>:
    10ae:	20 01 9c ff 	ldi.l	$r0, 0xffffff9c
    10b2:	ff ff 
    10b4:	30 01 64 00 	ldi.l	$r1, 0x64
    10b8:	00 00 

000010ba <bgt_1_test>:
    10ba:	32 0e       	cmp	$r1, $r0
    10bc:	01 cc       	bgt	10c0 <bgt_1_pass>
	...

000010c0 <bgt_1_pass>:
    10c0:	23 0e       	cmp	$r0, $r1
    10c2:	03 cc       	bgt	10ca <bgt_2_fail>
    10c4:	00 1a cc 10 	jmpa	10cc <bgt_2_pass>
    10c8:	00 00 

000010ca <bgt_2_fail>:
	...

000010cc <bgt_2_pass>:
    10cc:	22 0e       	cmp	$r0, $r0
    10ce:	03 cc       	bgt	10d6 <bgt_3_fail>
    10d0:	00 1a d8 10 	jmpa	10d8 <bgt_3_pass>
    10d4:	00 00 

000010d6 <bgt_3_fail>:
	...

000010d8 <bgt_3_pass>:
    10d8:	23 0e       	cmp	$r0, $r1
    10da:	01 c8       	blt	10de <blt_1_pass>
	...

000010de <blt_1_pass>:
    10de:	32 0e       	cmp	$r1, $r0
    10e0:	03 c8       	blt	10e8 <blt_2_fail>
    10e2:	00 1a ea 10 	jmpa	10ea <blt_2_pass>
    10e6:	00 00 

000010e8 <blt_2_fail>:
	...

000010ea <blt_2_pass>:
    10ea:	22 0e       	cmp	$r0, $r0
    10ec:	03 c8       	blt	10f4 <blt_3_fail>
    10ee:	00 1a f6 10 	jmpa	10f6 <bge_1_test>
    10f2:	00 00 

000010f4 <blt_3_fail>:
	...

000010f6 <bge_1_test>:
    10f6:	32 0e       	cmp	$r1, $r0
    10f8:	01 d8       	bge	10fc <bge_1_pass>
	...

000010fc <bge_1_pass>:
    10fc:	23 0e       	cmp	$r0, $r1
    10fe:	03 d8       	bge	1106 <bge_2_fail>
    1100:	00 1a 08 11 	jmpa	1108 <bge_2_pass>
    1104:	00 00 

00001106 <bge_2_fail>:
	...

00001108 <bge_2_pass>:
    1108:	22 0e       	cmp	$r0, $r0
    110a:	01 d8       	bge	110e <bge_3_pass>
	...

0000110e <bge_3_pass>:
    110e:	23 0e       	cmp	$r0, $r1
    1110:	01 dc       	ble	1114 <ble_1_pass>
	...

00001114 <ble_1_pass>:
    1114:	32 0e       	cmp	$r1, $r0
    1116:	03 dc       	ble	111e <ble_2_fail>
    1118:	00 1a 20 11 	jmpa	1120 <ble_2_pass>
    111c:	00 00 

0000111e <ble_2_fail>:
	...

00001120 <ble_2_pass>:
    1120:	22 0e       	cmp	$r0, $r0
    1122:	01 dc       	ble	1126 <ble_3_pass>
	...

00001126 <ble_3_pass>:
    1126:	20 01 00 00 	ldi.l	$r0, 0x0
    112a:	00 00 
    112c:	30 01 c8 00 	ldi.l	$r1, 0xc8
    1130:	00 00 
    1132:	40 01 c8 00 	ldi.l	$r2, 0xc8
    1136:	00 00 
    1138:	23 02       	mov	$r0, $r1
    113a:	24 0e       	cmp	$r0, $r2
    113c:	01 c0       	beq	1140 <add_test>
	...

00001140 <add_test>:
    1140:	20 01 64 00 	ldi.l	$r0, 0x64
    1144:	00 00 
    1146:	30 01 c8 00 	ldi.l	$r1, 0xc8
    114a:	00 00 
    114c:	40 01 2c 01 	ldi.l	$r2, 0x12c
    1150:	00 00 
    1152:	23 05       	add.l	$r0, $r1
    1154:	24 0e       	cmp	$r0, $r2
    1156:	01 c0       	beq	115a <add_test_pass>
	...

0000115a <add_test_pass>:
    115a:	20 01 2c 01 	ldi.l	$r0, 0x12c
    115e:	00 00 
    1160:	30 01 64 00 	ldi.l	$r1, 0x64
    1164:	00 00 
    1166:	40 01 c8 00 	ldi.l	$r2, 0xc8
    116a:	00 00 
    116c:	23 29       	sub.l	$r0, $r1
    116e:	24 0e       	cmp	$r0, $r2
    1170:	01 c0       	beq	1174 <and_test>
	...

00001174 <and_test>:
    1174:	20 01 78 56 	ldi.l	$r0, 0x12345678
    1178:	34 12 
    117a:	30 01 f0 f0 	ldi.l	$r1, 0xf0f0f0f0
    117e:	f0 f0 
    1180:	40 01 70 50 	ldi.l	$r2, 0x10305070
    1184:	30 10 
    1186:	23 26       	and	$r0, $r1
    1188:	24 0e       	cmp	$r0, $r2
    118a:	01 c0       	beq	118e <and_test_pass>
	...

0000118e <and_test_pass>:
    118e:	20 01 01 01 	ldi.l	$r0, 0x12340101
    1192:	34 12 
    1194:	30 01 10 10 	ldi.l	$r1, 0xfff01010
    1198:	f0 ff 
    119a:	40 01 11 11 	ldi.l	$r2, 0xfff41111
    119e:	f4 ff 
    11a0:	23 2b       	or	$r0, $r1
    11a2:	24 0e       	cmp	$r0, $r2
    11a4:	01 c0       	beq	11a8 <or_test_pass>
	...

000011a8 <or_test_pass>:
    11a8:	20 01 01 01 	ldi.l	$r0, 0x12340101
    11ac:	34 12 
    11ae:	30 01 10 10 	ldi.l	$r1, 0xfff01010
    11b2:	f0 ff 
    11b4:	40 01 11 11 	ldi.l	$r2, 0xedc41111
    11b8:	c4 ed 
    11ba:	23 2e       	xor	$r0, $r1
    11bc:	24 0e       	cmp	$r0, $r2
    11be:	01 c0       	beq	11c2 <not_test>
	...

000011c2 <not_test>:
    11c2:	20 01 00 00 	ldi.l	$r0, 0x0
    11c6:	00 00 
    11c8:	30 01 78 56 	ldi.l	$r1, 0x12345678
    11cc:	34 12 
    11ce:	40 01 87 a9 	ldi.l	$r2, 0xedcba987
    11d2:	cb ed 
    11d4:	23 2c       	not	$r0, $r1
    11d6:	24 0e       	cmp	$r0, $r2
    11d8:	01 c0       	beq	11dc <neg_1_test>
	...

000011dc <neg_1_test>:
    11dc:	20 01 00 00 	ldi.l	$r0, 0x0
    11e0:	00 00 
    11e2:	30 01 64 00 	ldi.l	$r1, 0x64
    11e6:	00 00 
    11e8:	40 01 9c ff 	ldi.l	$r2, 0xffffff9c
    11ec:	ff ff 
    11ee:	23 2a       	neg	$r0, $r1
    11f0:	24 0e       	cmp	$r0, $r2
    11f2:	01 c0       	beq	11f6 <neg_1_test_pass>
	...

000011f6 <neg_1_test_pass>:
    11f6:	20 01 00 00 	ldi.l	$r0, 0x0
    11fa:	00 00 
    11fc:	30 01 9c ff 	ldi.l	$r1, 0xffffff9c
    1200:	ff ff 
    1202:	40 01 64 00 	ldi.l	$r2, 0x64
    1206:	00 00 
    1208:	23 2a       	neg	$r0, $r1
    120a:	24 0e       	cmp	$r0, $r2
    120c:	01 c0       	beq	1210 <inc_test>
	...

00001210 <inc_test>:
    1210:	20 01 64 00 	ldi.l	$r0, 0x64
    1214:	00 00 
    1216:	40 01 5e 01 	ldi.l	$r2, 0x15e
    121a:	00 00 
    121c:	fa 82       	inc	$r0, 0xfa
    121e:	24 0e       	cmp	$r0, $r2
    1220:	01 c0       	beq	1224 <dec_test>
	...

00001224 <dec_test>:
    1224:	20 01 90 01 	ldi.l	$r0, 0x190
    1228:	00 00 
    122a:	40 01 96 00 	ldi.l	$r2, 0x96
    122e:	00 00 
    1230:	fa 92       	dec	$r0, 0xfa
    1232:	24 0e       	cmp	$r0, $r2
    1234:	01 c0       	beq	1238 <dec_test_pass>
	...

00001238 <dec_test_pass>:
    1238:	20 01 00 aa 	ldi.l	$r0, 0xaaaa00
    123c:	aa 00 
    123e:	30 01 05 00 	ldi.l	$r1, 0x5
    1242:	00 00 
    1244:	40 01 50 55 	ldi.l	$r2, 0x55550
    1248:	05 00 
    124a:	23 27       	lshr	$r0, $r1
    124c:	24 0e       	cmp	$r0, $r2
    124e:	01 c0       	beq	1252 <ashl_test>
	...

00001252 <ashl_test>:
    1252:	20 01 00 55 	ldi.l	$r0, 0x555500
    1256:	55 00 
    1258:	30 01 05 00 	ldi.l	$r1, 0x5
    125c:	00 00 
    125e:	40 01 00 a0 	ldi.l	$r2, 0xaaaa000
    1262:	aa 0a 
    1264:	23 28       	ashl	$r0, $r1
    1266:	24 0e       	cmp	$r0, $r2
    1268:	01 c0       	beq	126c <ashl_test_pass>
	...

0000126c <ashl_test_pass>:
    126c:	20 01 00 aa 	ldi.l	$r0, 0xaaaa00
    1270:	aa 00 
    1272:	30 01 05 00 	ldi.l	$r1, 0x5
    1276:	00 00 
    1278:	40 01 50 55 	ldi.l	$r2, 0x55550
    127c:	05 00 
    127e:	23 2d       	ashr	$r0, $r1
    1280:	24 0e       	cmp	$r0, $r2
    1282:	01 c0       	beq	1286 <ashr_1_test_pass>
	...

00001286 <ashr_1_test_pass>:
    1286:	20 01 00 aa 	ldi.l	$r0, 0x80aaaa00
    128a:	aa 80 
    128c:	30 01 05 00 	ldi.l	$r1, 0x5
    1290:	00 00 
    1292:	40 01 50 55 	ldi.l	$r2, 0xfc055550
    1296:	05 fc 
    1298:	23 2d       	ashr	$r0, $r1
    129a:	24 0e       	cmp	$r0, $r2
    129c:	01 c0       	beq	12a0 <ashr_2_test_pass>
	...

000012a0 <ashr_2_test_pass>:
    12a0:	20 01 64 00 	ldi.l	$r0, 0x64
    12a4:	00 00 
    12a6:	30 01 c8 00 	ldi.l	$r1, 0xc8
    12aa:	00 00 
    12ac:	40 01 20 4e 	ldi.l	$r2, 0x4e20
    12b0:	00 00 
    12b2:	23 2f       	mul.l	$r0, $r1
    12b4:	24 0e       	cmp	$r0, $r2
    12b6:	01 c0       	beq	12ba <mul_1_test_pass>
	...

000012ba <mul_1_test_pass>:
    12ba:	20 01 64 00 	ldi.l	$r0, 0x64
    12be:	00 00 
    12c0:	30 01 38 ff 	ldi.l	$r1, 0xffffff38
    12c4:	ff ff 
    12c6:	40 01 e0 b1 	ldi.l	$r2, 0xffffb1e0
    12ca:	ff ff 
    12cc:	23 2f       	mul.l	$r0, $r1
    12ce:	24 0e       	cmp	$r0, $r2
    12d0:	01 c0       	beq	12d4 <mul_2_test_pass>
	...

000012d4 <mul_2_test_pass>:
    12d4:	20 01 9c ff 	ldi.l	$r0, 0xffffff9c
    12d8:	ff ff 
    12da:	30 01 c8 00 	ldi.l	$r1, 0xc8
    12de:	00 00 
    12e0:	40 01 e0 b1 	ldi.l	$r2, 0xffffb1e0
    12e4:	ff ff 
    12e6:	23 2f       	mul.l	$r0, $r1
    12e8:	24 0e       	cmp	$r0, $r2
    12ea:	01 c0       	beq	12ee <mul_3_test_pass>
	...

000012ee <mul_3_test_pass>:
    12ee:	20 01 9c ff 	ldi.l	$r0, 0xffffff9c
    12f2:	ff ff 
    12f4:	30 01 38 ff 	ldi.l	$r1, 0xffffff38
    12f8:	ff ff 
    12fa:	40 01 20 4e 	ldi.l	$r2, 0x4e20
    12fe:	00 00 
    1300:	23 2f       	mul.l	$r0, $r1
    1302:	24 0e       	cmp	$r0, $r2
    1304:	01 c0       	beq	1308 <div_1_test>
	...

00001308 <div_1_test>:
    1308:	20 01 20 4e 	ldi.l	$r0, 0x4e20
    130c:	00 00 
    130e:	30 01 c8 00 	ldi.l	$r1, 0xc8
    1312:	00 00 
    1314:	40 01 64 00 	ldi.l	$r2, 0x64
    1318:	00 00 
    131a:	23 31       	div.l	$r0, $r1
    131c:	24 0e       	cmp	$r0, $r2
    131e:	01 c0       	beq	1322 <div_1_test_pass>
	...

00001322 <div_1_test_pass>:
    1322:	20 01 20 4e 	ldi.l	$r0, 0x4e20
    1326:	00 00 
    1328:	30 01 38 ff 	ldi.l	$r1, 0xffffff38
    132c:	ff ff 
    132e:	40 01 9c ff 	ldi.l	$r2, 0xffffff9c
    1332:	ff ff 
    1334:	23 31       	div.l	$r0, $r1
    1336:	24 0e       	cmp	$r0, $r2
    1338:	01 c0       	beq	133c <div_2_test_pass>
	...

0000133c <div_2_test_pass>:
    133c:	20 01 e0 b1 	ldi.l	$r0, 0xffffb1e0
    1340:	ff ff 
    1342:	30 01 c8 00 	ldi.l	$r1, 0xc8
    1346:	00 00 
    1348:	40 01 9c ff 	ldi.l	$r2, 0xffffff9c
    134c:	ff ff 
    134e:	23 31       	div.l	$r0, $r1
    1350:	24 0e       	cmp	$r0, $r2
    1352:	01 c0       	beq	1356 <div_3_test_pass>
	...

00001356 <div_3_test_pass>:
    1356:	20 01 e0 b1 	ldi.l	$r0, 0xffffb1e0
    135a:	ff ff 
    135c:	30 01 38 ff 	ldi.l	$r1, 0xffffff38
    1360:	ff ff 
    1362:	40 01 64 00 	ldi.l	$r2, 0x64
    1366:	00 00 
    1368:	23 31       	div.l	$r0, $r1
    136a:	24 0e       	cmp	$r0, $r2
    136c:	01 c0       	beq	1370 <div_4_test_pass>
	...

00001370 <div_4_test_pass>:
    1370:	20 01 00 5e 	ldi.l	$r0, 0xb2d05e00
    1374:	d0 b2 
    1376:	30 01 80 d1 	ldi.l	$r1, 0x8f0d180
    137a:	f0 08 
    137c:	40 01 14 00 	ldi.l	$r2, 0x14
    1380:	00 00 
    1382:	23 32       	udiv.l	$r0, $r1
    1384:	24 0e       	cmp	$r0, $r2
    1386:	01 c0       	beq	138a <mod_1_test>
	...

0000138a <mod_1_test>:
    138a:	20 01 2a 4e 	ldi.l	$r0, 0x4e2a
    138e:	00 00 
    1390:	30 01 c8 00 	ldi.l	$r1, 0xc8
    1394:	00 00 
    1396:	40 01 0a 00 	ldi.l	$r2, 0xa
    139a:	00 00 
    139c:	23 33       	mod.l	$r0, $r1
    139e:	24 0e       	cmp	$r0, $r2
    13a0:	01 c0       	beq	13a4 <mod_1_test_pass>
	...

000013a4 <mod_1_test_pass>:
    13a4:	20 01 2a 4e 	ldi.l	$r0, 0x4e2a
    13a8:	00 00 
    13aa:	30 01 38 ff 	ldi.l	$r1, 0xffffff38
    13ae:	ff ff 
    13b0:	40 01 0a 00 	ldi.l	$r2, 0xa
    13b4:	00 00 
    13b6:	23 33       	mod.l	$r0, $r1
    13b8:	24 0e       	cmp	$r0, $r2
    13ba:	01 c0       	beq	13be <mod_2_test_pass>
	...

000013be <mod_2_test_pass>:
    13be:	20 01 d6 b1 	ldi.l	$r0, 0xffffb1d6
    13c2:	ff ff 
    13c4:	30 01 c8 00 	ldi.l	$r1, 0xc8
    13c8:	00 00 
    13ca:	40 01 f6 ff 	ldi.l	$r2, 0xfffffff6
    13ce:	ff ff 
    13d0:	23 33       	mod.l	$r0, $r1
    13d2:	24 0e       	cmp	$r0, $r2
    13d4:	01 c0       	beq	13d8 <mod_3_test_pass>
	...

000013d8 <mod_3_test_pass>:
    13d8:	20 01 d6 b1 	ldi.l	$r0, 0xffffb1d6
    13dc:	ff ff 
    13de:	30 01 38 ff 	ldi.l	$r1, 0xffffff38
    13e2:	ff ff 
    13e4:	40 01 f6 ff 	ldi.l	$r2, 0xfffffff6
    13e8:	ff ff 
    13ea:	23 33       	mod.l	$r0, $r1
    13ec:	24 0e       	cmp	$r0, $r2
    13ee:	01 c0       	beq	13f2 <mod_4_test_pass>
	...

000013f2 <mod_4_test_pass>:
    13f2:	20 01 64 5e 	ldi.l	$r0, 0xb2d05e64
    13f6:	d0 b2 
    13f8:	30 01 80 d1 	ldi.l	$r1, 0x8f0d180
    13fc:	f0 08 
    13fe:	40 01 64 00 	ldi.l	$r2, 0x64
    1402:	00 00 
    1404:	23 34       	umod.l	$r0, $r1
    1406:	24 0e       	cmp	$r0, $r2
    1408:	01 c0       	beq	140c <mem_1_test>
	...

0000140c <mem_1_test>:
    140c:	30 01 78 56 	ldi.l	$r1, 0x12345678
    1410:	34 12 
    1412:	30 09 00 20 	sta.l	0x2000, $r1
    1416:	00 00 
    1418:	40 08 00 20 	lda.l	$r2, 0x2000
    141c:	00 00 
    141e:	34 0e       	cmp	$r1, $r2
    1420:	01 c0       	beq	1424 <mem_1_long_ok>
	...

00001424 <mem_1_long_ok>:
    1424:	44 2e       	xor	$r2, $r2
    1426:	40 22 00 20 	lda.s	$r2, 0x2000
    142a:	00 00 
    142c:	50 01 78 56 	ldi.l	$r3, 0x5678
    1430:	00 00 
    1432:	45 0e       	cmp	$r2, $r3
    1434:	01 c0       	beq	1438 <mem_1_short_0_ok>
	...

00001438 <mem_1_short_0_ok>:
    1438:	44 2e       	xor	$r2, $r2
    143a:	40 22 02 20 	lda.s	$r2, 0x2002
    143e:	00 00 
    1440:	50 01 34 12 	ldi.l	$r3, 0x1234
    1444:	00 00 
    1446:	45 0e       	cmp	$r2, $r3
    1448:	01 c0       	beq	144c <mem_1_short_1_ok>
	...

0000144c <mem_1_short_1_ok>:
    144c:	40 1d 00 20 	lda.b	$r2, 0x2000
    1450:	00 00 
    1452:	50 01 78 00 	ldi.l	$r3, 0x78
    1456:	00 00 
    1458:	45 0e       	cmp	$r2, $r3
    145a:	01 c0       	beq	145e <mem_1_byte_0_ok>
	...

0000145e <mem_1_byte_0_ok>:
    145e:	40 1d 01 20 	lda.b	$r2, 0x2001
    1462:	00 00 
    1464:	50 01 56 00 	ldi.l	$r3, 0x56
    1468:	00 00 
    146a:	45 0e       	cmp	$r2, $r3
    146c:	01 c0       	beq	1470 <mem_1_byte_1_ok>
	...

00001470 <mem_1_byte_1_ok>:
    1470:	40 1d 02 20 	lda.b	$r2, 0x2002
    1474:	00 00 
    1476:	50 01 34 00 	ldi.l	$r3, 0x34
    147a:	00 00 
    147c:	45 0e       	cmp	$r2, $r3
    147e:	01 c0       	beq	1482 <mem_1_byte_2_ok>
	...

00001482 <mem_1_byte_2_ok>:
    1482:	40 1d 03 20 	lda.b	$r2, 0x2003
    1486:	00 00 
    1488:	50 01 12 00 	ldi.l	$r3, 0x12
    148c:	00 00 
    148e:	45 0e       	cmp	$r2, $r3
    1490:	01 c0       	beq	1494 <mem_1_byte_3_ok>
	...

00001494 <mem_1_byte_3_ok>:
    1494:	30 01 78 56 	ldi.l	$r1, 0x12345678
    1498:	34 12 
    149a:	30 09 01 20 	sta.l	0x2001, $r1
    149e:	00 00 
    14a0:	40 08 01 20 	lda.l	$r2, 0x2001
    14a4:	00 00 
    14a6:	34 0e       	cmp	$r1, $r2
    14a8:	01 c0       	beq	14ac <mem_2_long_ok>
	...

000014ac <mem_2_long_ok>:
    14ac:	44 2e       	xor	$r2, $r2
    14ae:	40 22 01 20 	lda.s	$r2, 0x2001
    14b2:	00 00 
    14b4:	50 01 78 56 	ldi.l	$r3, 0x5678
    14b8:	00 00 
    14ba:	45 0e       	cmp	$r2, $r3
    14bc:	01 c0       	beq	14c0 <mem_2_short_0_ok>
	...

000014c0 <mem_2_short_0_ok>:
    14c0:	44 2e       	xor	$r2, $r2
    14c2:	40 22 03 20 	lda.s	$r2, 0x2003
    14c6:	00 00 
    14c8:	50 01 34 12 	ldi.l	$r3, 0x1234
    14cc:	00 00 
    14ce:	45 0e       	cmp	$r2, $r3
    14d0:	01 c0       	beq	14d4 <mem_2_short_1_ok>
	...

000014d4 <mem_2_short_1_ok>:
    14d4:	40 1d 01 20 	lda.b	$r2, 0x2001
    14d8:	00 00 
    14da:	50 01 78 00 	ldi.l	$r3, 0x78
    14de:	00 00 
    14e0:	45 0e       	cmp	$r2, $r3
    14e2:	01 c0       	beq	14e6 <mem_2_byte_0_ok>
	...

000014e6 <mem_2_byte_0_ok>:
    14e6:	40 1d 02 20 	lda.b	$r2, 0x2002
    14ea:	00 00 
    14ec:	50 01 56 00 	ldi.l	$r3, 0x56
    14f0:	00 00 
    14f2:	45 0e       	cmp	$r2, $r3
    14f4:	01 c0       	beq	14f8 <mem_2_byte_1_ok>
	...

000014f8 <mem_2_byte_1_ok>:
    14f8:	40 1d 03 20 	lda.b	$r2, 0x2003
    14fc:	00 00 
    14fe:	50 01 34 00 	ldi.l	$r3, 0x34
    1502:	00 00 
    1504:	45 0e       	cmp	$r2, $r3
    1506:	01 c0       	beq	150a <mem_2_byte_2_ok>
	...

0000150a <mem_2_byte_2_ok>:
    150a:	40 1d 04 20 	lda.b	$r2, 0x2004
    150e:	00 00 
    1510:	50 01 12 00 	ldi.l	$r3, 0x12
    1514:	00 00 
    1516:	45 0e       	cmp	$r2, $r3
    1518:	01 c0       	beq	151c <mem_2_byte_3_ok>
	...

0000151c <mem_2_byte_3_ok>:
    151c:	30 01 34 12 	ldi.l	$r1, 0x1234
    1520:	00 00 
    1522:	30 24 00 20 	sta.s	0x2000, $r1
    1526:	00 00 
    1528:	40 22 00 20 	lda.s	$r2, 0x2000
    152c:	00 00 
    152e:	34 0e       	cmp	$r1, $r2
    1530:	01 c0       	beq	1534 <mem_3_short_ok>
	...

00001534 <mem_3_short_ok>:
    1534:	40 1d 00 20 	lda.b	$r2, 0x2000
    1538:	00 00 
    153a:	50 01 34 00 	ldi.l	$r3, 0x34
    153e:	00 00 
    1540:	45 0e       	cmp	$r2, $r3
    1542:	01 c0       	beq	1546 <mem_3_byte_0_ok>
	...

00001546 <mem_3_byte_0_ok>:
    1546:	40 1d 01 20 	lda.b	$r2, 0x2001
    154a:	00 00 
    154c:	50 01 12 00 	ldi.l	$r3, 0x12
    1550:	00 00 
    1552:	45 0e       	cmp	$r2, $r3
    1554:	01 c0       	beq	1558 <mem_3_byte_1_ok>
	...

00001558 <mem_3_byte_1_ok>:
    1558:	30 01 34 12 	ldi.l	$r1, 0x1234
    155c:	00 00 
    155e:	30 24 01 20 	sta.s	0x2001, $r1
    1562:	00 00 
    1564:	40 22 01 20 	lda.s	$r2, 0x2001
    1568:	00 00 
    156a:	34 0e       	cmp	$r1, $r2
    156c:	01 c0       	beq	1570 <mem_4_short_ok>
	...

00001570 <mem_4_short_ok>:
    1570:	40 1d 01 20 	lda.b	$r2, 0x2001
    1574:	00 00 
    1576:	50 01 34 00 	ldi.l	$r3, 0x34
    157a:	00 00 
    157c:	45 0e       	cmp	$r2, $r3
    157e:	01 c0       	beq	1582 <mem_4_byte_0_ok>
	...

00001582 <mem_4_byte_0_ok>:
    1582:	40 1d 02 20 	lda.b	$r2, 0x2002
    1586:	00 00 
    1588:	50 01 12 00 	ldi.l	$r3, 0x12
    158c:	00 00 
    158e:	45 0e       	cmp	$r2, $r3
    1590:	01 c0       	beq	1594 <mem_4_byte_1_ok>
	...

00001594 <mem_4_byte_1_ok>:
    1594:	30 01 12 00 	ldi.l	$r1, 0x12
    1598:	00 00 
    159a:	30 1f 00 20 	sta.b	0x2000, $r1
    159e:	00 00 
    15a0:	40 1d 00 20 	lda.b	$r2, 0x2000
    15a4:	00 00 
    15a6:	34 0e       	cmp	$r1, $r2
    15a8:	01 c0       	beq	15ac <mem_5_ok>
	...

000015ac <mem_5_ok>:
    15ac:	30 01 12 00 	ldi.l	$r1, 0x12
    15b0:	00 00 
    15b2:	30 1f 01 20 	sta.b	0x2001, $r1
    15b6:	00 00 
    15b8:	40 1d 01 20 	lda.b	$r2, 0x2001
    15bc:	00 00 
    15be:	34 0e       	cmp	$r1, $r2
    15c0:	01 c0       	beq	15c4 <mem_6_ok>
	...

000015c4 <mem_6_ok>:
    15c4:	30 01 aa aa 	ldi.l	$r1, 0xaaaaaaaa
    15c8:	aa aa 
    15ca:	30 09 00 20 	sta.l	0x2000, $r1
    15ce:	00 00 
    15d0:	30 09 04 20 	sta.l	0x2004, $r1
    15d4:	00 00 
    15d6:	30 01 78 56 	ldi.l	$r1, 0x12345678
    15da:	34 12 
    15dc:	30 09 01 20 	sta.l	0x2001, $r1
    15e0:	00 00 
    15e2:	30 1d 00 20 	lda.b	$r1, 0x2000
    15e6:	00 00 
    15e8:	40 01 aa 00 	ldi.l	$r2, 0xaa
    15ec:	00 00 
    15ee:	34 0e       	cmp	$r1, $r2
    15f0:	01 c0       	beq	15f4 <mem_7_1_ok>
	...

000015f4 <mem_7_1_ok>:
    15f4:	30 1d 05 20 	lda.b	$r1, 0x2005
    15f8:	00 00 
    15fa:	34 0e       	cmp	$r1, $r2
    15fc:	01 c0       	beq	1600 <mem_7_2_ok>
	...

00001600 <mem_7_2_ok>:
    1600:	30 01 aa aa 	ldi.l	$r1, 0xaaaaaaaa
    1604:	aa aa 
    1606:	30 09 00 20 	sta.l	0x2000, $r1
    160a:	00 00 
    160c:	30 01 34 12 	ldi.l	$r1, 0x1234
    1610:	00 00 
    1612:	30 24 01 20 	sta.s	0x2001, $r1
    1616:	00 00 
    1618:	30 1d 00 20 	lda.b	$r1, 0x2000
    161c:	00 00 
    161e:	40 01 aa 00 	ldi.l	$r2, 0xaa
    1622:	00 00 
    1624:	34 0e       	cmp	$r1, $r2
    1626:	01 c0       	beq	162a <mem_8_1_ok>
	...

0000162a <mem_8_1_ok>:
    162a:	30 1d 03 20 	lda.b	$r1, 0x2003
    162e:	00 00 
    1630:	34 0e       	cmp	$r1, $r2
    1632:	01 c0       	beq	1636 <mem_8_2_ok>
	...

00001636 <mem_8_2_ok>:
    1636:	30 01 aa aa 	ldi.l	$r1, 0xaaaaaaaa
    163a:	aa aa 
    163c:	30 09 00 20 	sta.l	0x2000, $r1
    1640:	00 00 
    1642:	30 01 12 00 	ldi.l	$r1, 0x12
    1646:	00 00 
    1648:	30 1f 00 20 	sta.b	0x2000, $r1
    164c:	00 00 
    164e:	30 1d 01 20 	lda.b	$r1, 0x2001
    1652:	00 00 
    1654:	40 01 aa 00 	ldi.l	$r2, 0xaa
    1658:	00 00 
    165a:	34 0e       	cmp	$r1, $r2
    165c:	01 c0       	beq	1660 <mem_10_test>
	...

00001660 <mem_10_test>:
    1660:	30 01 aa aa 	ldi.l	$r1, 0xaaaaaaaa
    1664:	aa aa 
    1666:	30 09 00 20 	sta.l	0x2000, $r1
    166a:	00 00 
    166c:	30 01 12 00 	ldi.l	$r1, 0x12
    1670:	00 00 
    1672:	30 1f 01 20 	sta.b	0x2001, $r1
    1676:	00 00 
    1678:	30 1d 00 20 	lda.b	$r1, 0x2000
    167c:	00 00 
    167e:	40 01 aa 00 	ldi.l	$r2, 0xaa
    1682:	00 00 
    1684:	34 0e       	cmp	$r1, $r2
    1686:	01 c0       	beq	168a <mem_10_ok>
	...

0000168a <mem_10_ok>:
    168a:	30 01 10 20 	ldi.l	$r1, 0x2010
    168e:	00 00 
    1690:	40 01 78 56 	ldi.l	$r2, 0x12345678
    1694:	34 12 
    1696:	34 0b       	st.l	($r1), $r2
    1698:	53 0a       	ld.l	$r3, ($r1)
    169a:	54 0e       	cmp	$r3, $r2
    169c:	01 c0       	beq	16a0 <mem_11_1_ok>
	...

000016a0 <mem_11_1_ok>:
    16a0:	50 08 10 20 	lda.l	$r3, 0x2010
    16a4:	00 00 
    16a6:	54 0e       	cmp	$r3, $r2
    16a8:	01 c0       	beq	16ac <mem_11_2_ok>
	...

000016ac <mem_11_2_ok>:
    16ac:	30 01 20 20 	ldi.l	$r1, 0x2020
    16b0:	00 00 
    16b2:	40 01 34 12 	ldi.l	$r2, 0x1234
    16b6:	00 00 
    16b8:	34 23       	st.s	($r1), $r2
    16ba:	53 21       	ld.s	$r3, ($r1)
    16bc:	54 0e       	cmp	$r3, $r2
    16be:	01 c0       	beq	16c2 <mem_12_1_ok>
	...

000016c2 <mem_12_1_ok>:
    16c2:	50 22 20 20 	lda.s	$r3, 0x2020
    16c6:	00 00 
    16c8:	54 0e       	cmp	$r3, $r2
    16ca:	01 c0       	beq	16ce <mem_12_2_ok>
	...

000016ce <mem_12_2_ok>:
    16ce:	30 01 30 20 	ldi.l	$r1, 0x2030
    16d2:	00 00 
    16d4:	40 01 12 00 	ldi.l	$r2, 0x12
    16d8:	00 00 
    16da:	34 1e       	st.b	($r1), $r2
    16dc:	53 1c       	ld.b	$r3, ($r1)
    16de:	54 0e       	cmp	$r3, $r2
    16e0:	01 c0       	beq	16e4 <mem_13_1_ok>
	...

000016e4 <mem_13_1_ok>:
    16e4:	50 1d 30 20 	lda.b	$r3, 0x2030
    16e8:	00 00 
    16ea:	54 0e       	cmp	$r3, $r2
    16ec:	01 c0       	beq	16f0 <mem_13_2_ok>
	...

000016f0 <mem_13_2_ok>:
    16f0:	30 01 10 21 	ldi.l	$r1, 0x2110
    16f4:	00 00 
    16f6:	40 01 78 56 	ldi.l	$r2, 0x12345678
    16fa:	34 12 
    16fc:	34 0d 00 01 	sto.l	0x100($r1), $r2
    1700:	00 00 
    1702:	53 0c 00 01 	ldo.l	$r3, 0x100($r1)
    1706:	00 00 
    1708:	54 0e       	cmp	$r3, $r2
    170a:	01 c0       	beq	170e <mem_14_1_ok>
	...

0000170e <mem_14_1_ok>:
    170e:	50 08 10 22 	lda.l	$r3, 0x2210
    1712:	00 00 
    1714:	54 0e       	cmp	$r3, $r2
    1716:	01 c0       	beq	171a <mem_14_2_ok>
	...

0000171a <mem_14_2_ok>:
    171a:	30 01 20 21 	ldi.l	$r1, 0x2120
    171e:	00 00 
    1720:	40 01 34 12 	ldi.l	$r2, 0x1234
    1724:	00 00 
    1726:	34 39 00 01 	sto.s	0x100($r1), $r2
    172a:	00 00 
    172c:	53 38 00 01 	ldo.s	$r3, 0x100($r1)
    1730:	00 00 
    1732:	54 0e       	cmp	$r3, $r2
    1734:	01 c0       	beq	1738 <mem_15_1_ok>
	...

00001738 <mem_15_1_ok>:
    1738:	50 22 20 22 	lda.s	$r3, 0x2220
    173c:	00 00 
    173e:	54 0e       	cmp	$r3, $r2
    1740:	01 c0       	beq	1744 <mem_15_2_ok>
	...

00001744 <mem_15_2_ok>:
    1744:	30 01 30 21 	ldi.l	$r1, 0x2130
    1748:	00 00 
    174a:	40 01 12 00 	ldi.l	$r2, 0x12
    174e:	00 00 
    1750:	34 37 00 01 	sto.b	0x100($r1), $r2
    1754:	00 00 
    1756:	53 36 00 01 	ldo.b	$r3, 0x100($r1)
    175a:	00 00 
    175c:	54 0e       	cmp	$r3, $r2
    175e:	01 c0       	beq	1762 <mem_16_1_ok>
	...

00001762 <mem_16_1_ok>:
    1762:	50 1d 30 22 	lda.b	$r3, 0x2230
    1766:	00 00 
    1768:	54 0e       	cmp	$r3, $r2
    176a:	01 c0       	beq	176e <jmp_test>
	...

0000176e <jmp_test>:
    176e:	20 01 78 17 	ldi.l	$r0, 0x1778
    1772:	00 00 
    1774:	20 25       	jmp	$r0
	...

00001778 <jmp_continue>:
    1778:	00 1a 80 17 	jmpa	1780 <jmp_continue_2>
    177c:	00 00 
	...

00001780 <jmp_continue_2>:
    1780:	10 01 80 20 	ldi.l	$sp, 0x2080
    1784:	00 00 

00001786 <stack_test_1>:
    1786:	30 01 64 00 	ldi.l	$r1, 0x64
    178a:	00 00 
    178c:	13 06       	push	$sp, $r1
    178e:	50 01 7c 20 	ldi.l	$r3, 0x207c
    1792:	00 00 
    1794:	15 0e       	cmp	$sp, $r3
    1796:	01 c0       	beq	179a <stack_test_1_ok_1>
	...

0000179a <stack_test_1_ok_1>:
    179a:	14 07       	pop	$sp, $r2
    179c:	34 0e       	cmp	$r1, $r2
    179e:	01 c0       	beq	17a2 <stack_test_1_ok_2>
	...

000017a2 <stack_test_1_ok_2>:
    17a2:	50 01 80 20 	ldi.l	$r3, 0x2080
    17a6:	00 00 
    17a8:	15 0e       	cmp	$sp, $r3
    17aa:	01 c0       	beq	17ae <stack_test_1_ok_3>
	...

000017ae <stack_test_1_ok_3>:
    17ae:	00 1a cc 17 	jmpa	17cc <jsr_test_1>
    17b2:	00 00 

000017b4 <add_fn>:
    17b4:	12 06       	push	$sp, $r0
    17b6:	30 0c 0c 00 	ldo.l	$r1, 0xc($fp)
    17ba:	00 00 
    17bc:	40 0c 10 00 	ldo.l	$r2, 0x10($fp)
    17c0:	00 00 
    17c2:	34 05       	add.l	$r1, $r2
    17c4:	e0 02       	mov	$r12, $fp
    17c6:	04 9e       	dec	$r12, 0x4
    17c8:	e2 07       	pop	$r12, $r0
    17ca:	00 04       	ret

000017cc <jsr_test_1>:
    17cc:	30 01 e8 03 	ldi.l	$r1, 0x3e8
    17d0:	00 00 
    17d2:	13 06       	push	$sp, $r1
    17d4:	30 01 f4 01 	ldi.l	$r1, 0x1f4
    17d8:	00 00 
    17da:	13 06       	push	$sp, $r1
    17dc:	00 03 b4 17 	jsra	17b4 <add_fn>
    17e0:	00 00 
    17e2:	40 01 dc 05 	ldi.l	$r2, 0x5dc
    17e6:	00 00 
    17e8:	34 0e       	cmp	$r1, $r2
    17ea:	01 c0       	beq	17ee <jsr_test_1_pass>
	...

000017ee <jsr_test_1_pass>:
    17ee:	30 01 d0 07 	ldi.l	$r1, 0x7d0
    17f2:	00 00 
    17f4:	13 06       	push	$sp, $r1
    17f6:	30 01 e8 03 	ldi.l	$r1, 0x3e8
    17fa:	00 00 
    17fc:	13 06       	push	$sp, $r1
    17fe:	30 01 b4 17 	ldi.l	$r1, 0x17b4
    1802:	00 00 
    1804:	30 19       	jsr	$r1
    1806:	40 01 b8 0b 	ldi.l	$r2, 0xbb8
    180a:	00 00 
    180c:	34 0e       	cmp	$r1, $r2
    180e:	01 c0       	beq	1812 <jsr_test_2_pass>
	...

00001812 <jsr_test_2_pass>:
    1812:	00 35       	brk
